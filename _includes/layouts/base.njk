<!doctype html>
<html class="no-js" lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="x-ua-compatible" content="ie=edge">
        <title>{% if number %}№ {{number}} {{title}} · {% elif title %} {{title}} · {% endif %} {{ metadata.title }}</title>
        <meta name="description" content="The unofficial listener's guide to The Sci-Fi Christian Podcast, hosted by Ben de Bono and Matt Anderson">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="theme-color" content="#41c6e7">
        <link href="/css/main.css" rel="stylesheet" type="text/css">
        <link href="/css/custom.css" rel="stylesheet" type="text/css">
        <link href="https://fonts.googleapis.com/css?family=Ubuntu:400,400i,700" rel="stylesheet">
    </head>
    <body>
        <div class="section">
        <header class="navbar is-primary">
            <h1 class="navbar-brand">
                <span class="navbar-item">
                    <img src="/img/theo-logo-flat.png">
                </span>
                <a class="navbar-item" href="/">
                    {{ metadata.title }}
                </a>
                <div class="navbar-burger" data-target="navMenu">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            </h1>
            <nav id="navMenu" class="navbar-menu">
                <div class="navbar-end">
                    <a class="navbar-item" href="/">Home</a>
                    <a class="navbar-item" href="/episodes/">Episodes</a>
                    {# <a href="/">Awards</a>
                    <a href="/">Statistics</a> #}
                    <a class="navbar-item" href="/about/">About</a>
                </div>
            </nav>
        </header>
        <main class="container">
            {{ layoutContent | safe }}
        </main>
        <footer class="footer columns">
            <div class="column has-text-left">
                <p>Built and maintained by The Archivist</p>
                <p>Powered by a flux capacitor and squirrels</p>
            </div>
            <div class="column has-text-right">Copyright © The Sci-Fi Christian</div>
        </footer>
        </div>

        <script src="/js/lunr.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                /* bulma-provided navbar */
                // Get all "navbar-burger" elements
                let $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

                // Check if there are any navbar burgers
                if ($navbarBurgers.length > 0) {

                    // Add a click event on each of them
                    $navbarBurgers.forEach(function ($el) {
                        $el.addEventListener('click', function () {
                            // Get the target from the "data-target" attribute
                            let target = $el.dataset.target;
                            let $target = document.getElementById(target);

                            // Toggle the class on both the "navbar-burger" and the "navbar-menu"
                            $el.classList.toggle('is-active');
                            $target.classList.toggle('is-active');
                        });
                    });
                }

                /* search */
                let searchIndexPath = '/lunrIndex.json';
                let searchIndex;
                let searchStore;
                let searchBar = document.getElementById('searchbar');
                let searchButton = document.getElementById('searchbutton');

                getSearchIndex();
                
                if (searchButton != null) {
                    searchButton.addEventListener('click', requestSearch);
                }

                /* search functions */
                function getSearchIndex () {
                    let httpRequest = new XMLHttpRequest();
                    httpRequest.onreadystatechange = () => {
                        if (httpRequest.readyState === XMLHttpRequest.DONE) {
                            if (httpRequest.status === 200) {
                                let response = JSON.parse(httpRequest.responseText);
                                searchIndex = lunr.Index.load(response.index);
                                searchStore = response.store;
                                searchButton.disabled = false;
                            } else {
                                console.log('Search index request error');
                            }
                        }
                    };
                    httpRequest.open('GET', searchIndexPath);
                    httpRequest.send();
                }

                function requestSearch () {
                    let query = searchBar.value;
                    if (query != undefined) {
                        let results = searchIndex.search(query);

                        if (results.length === 0) {
                            showResults(query.length <= 3 ? 'short' : 'empty');
                        }
                        else {
                            showResults('filled');

                            let ol = document.getElementById('searchresults');
                            ol.innerHTML = '';
                            
                            results.forEach(result => {
                                let a = createA(result.ref, searchStore[result.ref].title);
                                let li = document.createElement('li');
                                let box = createDiv('box');
                                box.appendChild(a)
                                li.appendChild(box);
                                ol.appendChild(li);
                            })
                        }
                    }
                }

                function createA (href, text) {
                    let a = document.createElement('a');
                    a.href = href;
                    a.innerText = text;
                    return a;
                }

                function createDiv (className) {
                    let div = document.createElement('div');
                    div.classList.add(className);
                    return div;
                }

                function showResults (resultsPane) {
                    document.getElementById('searchfilled').style.display = resultsPane === 'filled' ? 'block' : 'none';
                    document.getElementById('searchempty').style.display = resultsPane === 'empty' ? 'block' : 'none';
                    document.getElementById('searchshort').style.display = resultsPane === 'short' ? 'block' : 'none';
                }
            });
        </script>
    </body>
</html>